var FlashTools = function() {};// ------------------------------------// Common functions// ------------------------------------FlashTools.prototype.Trace = function(text) {	fl.outputPanel.trace(text);};FlashTools.prototype.TraceError = function(text) {	this.Trace("!!!Error!!!: " + text);};FlashTools.prototype.ClearOutput = function() {	fl.outputPanel.clear();};FlashTools.prototype.EscapePath = function(path) {	return path.replace(/ /g, '%20');}FlashTools.prototype.CombinePath = function(lhs, rhs) {	return this.EscapePath(lhs) + this.EscapePath(rhs);};// ------------------------------------// Folder item functions// ------------------------------------FlashTools.prototype.FolderItem_TraceInfo = function(item) {	this.Trace("  Name           : " + item.name);	this.Trace("  ExportFilename : " + this.BitmapItem_GetExportFilename(item));};FlashTools.prototype.FolderItem_GetExportFilename = function(item) {	return this.EscapePath(item.name);};// ------------------------------------// Bitmap item functions// ------------------------------------FlashTools.prototype.BitmapItem_TraceInfo = function(item) {	this.Trace("  Name           : " + item.name);	this.Trace("  ExportFilename : " + this.BitmapItem_GetExportFilename(item));};FlashTools.prototype.BitmapItem_GetExportFilename = function(item) {	var export_filename = item.name;	var regex_has_png_ext = /\.png$/i;	if ( !regex_has_png_ext.test(export_filename) ) {		export_filename += ".png";	}	return export_filename;};// ------------------------------------// Document functions// ------------------------------------FlashTools.prototype.Document_TraceInfo = function(document) {	this.Trace("  Name         : " + document.name);	this.Trace("  Path         : " + this.Document_GetPath(document));	this.Trace("  ExportFolder : " + this.Document_GetExportFolder(document));};FlashTools.prototype.Document_GetPath = function(document) {	return this.EscapePath(document.pathURI);};FlashTools.prototype.Document_GetExportFolder = function(document) {	return this.Document_GetPath(document) + "_export/";};FlashTools.prototype.Document_ExitEditMode = function(document) {	for ( var i = 0; i < 100; ++i ) {		document.exitEditMode();	}};FlashTools.prototype.Document_ClearExportFolder = function(document) {	var export_folder = this.Document_GetExportFolder(document);	if ( FLfile.exists(export_folder) ) {		if ( !FLfile.remove(export_folder) ) {			this.TraceError("Can't remove document export folder!");			this.TraceError("  Export folder: " + export_folder);			return false;		}	}	if ( !FLfile.createFolder(export_folder) ) {		this.TraceError("Can't create document export folder!");		this.TraceError("  Export folder: " + export_folder);		return false;	}	return true;};FlashTools.prototype.Document_ExportLibrary = function(document) {	this.Document_ExitEditMode(document);	var export_folder = this.Document_GetExportFolder(document);		var xml_content = "<Library>\n";		for ( var i = 0; i < document.library.items.length; ++i ) {		var item = document.library.items[i];		if ( item.itemType == "folder" ) {			var item_filename = this.FolderItem_GetExportFilename(item);			var item_export_path = this.CombinePath(export_folder, item_filename);			if ( !FLfile.createFolder(item_export_path) ) {				this.TraceError("Can't create library export folder!");				this.TraceError("  Export folder: " + export_folder);				this.FolderItem_TraceInfo(item);				return false;			}		} else if ( item.itemType == "bitmap" ) {			var item_filename = this.BitmapItem_GetExportFilename(item);			var item_export_path = this.CombinePath(export_folder, item_filename);			if ( !item.exportToFile(item_export_path) ) {				this.TraceError("Can't export bitmap asset!");				this.TraceError("  Export folder: " + export_folder);				this.BitmapItem_TraceInfo(item);				return false;			}			xml_content +=				"\t<Asset"     +				" name='"      + item.name        + "'" +				" type='"      + item.itemType    + "'" +				" filename='"  + item_filename    + "'" +				" smoothing='" + item.allowSmoothing + "'/>\n";		} else if ( item.itemType == "graphic" || item.itemType == "component" || item.itemType == "movie clip" ) {		} else {			this.TraceError("Unsupported library item type!");			this.TraceError("  Item type: " + item.itemType);			return false;		}	}		xml_content += "</Library>";	var library_path = this.CombinePath(export_folder, "Library.xml");	if ( !FLfile.write(library_path, xml_content) ) {		this.TraceError("Can't create library xml!");		this.TraceError("  Library path: " + library_path);	}	return true;};// ------------------------------------// Convert functions// ------------------------------------FlashTools.prototype.ConvertAll = function() {	var documents = fl.documents;	for ( var i = 0; i < documents.length; ++i ) {		this.ConvertOne(documents[i]);	}};FlashTools.prototype.ConvertOne = function(document) {	this.Trace("-= Convert document start =-");	this.Document_TraceInfo(document);	if ( this.Document_ClearExportFolder(document) ) {		if ( this.Document_ExportLibrary(document) ) {			this.Trace("-= Convert document finish =-");		} else {			this.Document_ClearExportFolder(document);		}	}};// ------------------------------------// Test functions// ------------------------------------FlashTools.prototype.CommonTest = function(func, func_name) {	if ( !func() ) {		this.Trace("Test error: " + func_name);	}};FlashTools.prototype.Test0 = function() {	return true;};FlashTools.prototype.RunTests = function() {	this.CommonTest(this.Test0, "Test0");};// ------------------------------------// Run// ------------------------------------var ft = new FlashTools();ft.ClearOutput();ft.RunTests();ft.ConvertAll();